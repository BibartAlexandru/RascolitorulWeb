<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.KernelMemory.Orchestration.RabbitMQ</name>
    </assembly>
    <members>
        <member name="T:Microsoft.KernelMemory.KernelMemoryBuilderExtensions">
            <summary>
            Kernel Memory builder extensions
            </summary>
        </member>
        <member name="T:Microsoft.KernelMemory.DependencyInjection">
            <summary>
            .NET IServiceCollection dependency injection extensions.
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.Host">
            <summary>
            RabbitMQ hostname, e.g. "127.0.0.1"
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.Port">
            <summary>
            TCP port for the connection, e.g. 5672
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.Username">
            <summary>
            Authentication username
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.Password">
            <summary>
            Authentication password
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.VirtualHost">
            <summary>
            RabbitMQ virtual host name, e.g. "/"
            See https://www.rabbitmq.com/docs/vhosts
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.MessageTTLSecs">
            <summary>
            How long to retry messages delivery, ie how long to retry, in seconds.
            Default: 3600 second, 1 hour.
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.SslEnabled">
            <summary>
            Set to true if your RabbitMQ supports SSL.
            Default: false
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.ConcurrentThreads">
            <summary>
            How many messages to process asynchronously at a time, in each queue.
            Note that this applies to each queue, and each queue is used
            for a specific pipeline step.
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.PrefetchCount">
            <summary>
            How many messages to fetch at a time from each queue.
            The value should be higher than ConcurrentThreads to make sure each
            thread has some work to do.
            Note that this applies to each queue, and each queue is used
            for a specific pipeline step.
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.MaxRetriesBeforePoisonQueue">
            <summary>
            How many times to retry processing a message before moving it to a poison queue.
            Example: a value of 20 means that a message will be processed up to 21 times.
            Note: this value cannot be changed after queues have been created. In such case
                  you might need to drain all queues, delete them, and restart the ingestion service(s).
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.DelayBeforeRetryingMsecs">
            <summary>
            How long to wait before putting a message back to the queue in case of failure.
            Note: currently a basic strategy not based on RabbitMQ exchanges, potentially
            affecting the pipeline concurrency performance: consumers hold
            messages for N msecs, slowing down the delivery of other messages.
            </summary>
        </member>
        <member name="P:Microsoft.KernelMemory.RabbitMQConfig.PoisonQueueSuffix">
            <summary>
            Suffix used for the poison queues.
            </summary>
        </member>
        <member name="M:Microsoft.KernelMemory.RabbitMQConfig.Validate(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Verify that the current state is valid.
            </summary>
        </member>
        <member name="M:Microsoft.KernelMemory.Orchestration.RabbitMQ.RabbitMQPipeline.#ctor(Microsoft.KernelMemory.RabbitMQConfig,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new RabbitMQ queue instance
            </summary>
        </member>
        <member name="M:Microsoft.KernelMemory.Orchestration.RabbitMQ.RabbitMQPipeline.ConnectToQueueAsync(System.String,Microsoft.KernelMemory.Pipeline.Queue.QueueOptions,System.Threading.CancellationToken)">
            <inheritdoc />
            About dead letters, see https://www.rabbitmq.com/docs/dlx
        </member>
        <member name="M:Microsoft.KernelMemory.Orchestration.RabbitMQ.RabbitMQPipeline.EnqueueAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.KernelMemory.Orchestration.RabbitMQ.RabbitMQPipeline.OnDequeue(System.Func{System.String,System.Threading.Tasks.Task{System.Boolean}})">
            <inheritdoc />
        </member>
    </members>
</doc>
